{
  "fib" : [
    {
      "question" : "You are climbing a staircase. It takes n steps to reach the top.\n\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\n\n \n\nExample 1\n\nInput n = 2\nOutput 2\nExplanation There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\nExample 2\n\nInput n = 3\nOutput 3\nExplanation There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step",
      "data_structure":"1d-array",
      "algorithm" : "dynamic programming",
      "code" : "dp[i] = max(dp[i-1],dp[i-2])",
      "description" : "always use bottom up since they are asking for number of way use pluse take care of base condition"
    },
     {
      "question" : "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.\n\nGiven an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.\n\n \n\nExample 1\n\nInput nums = [1,2,3,1]\nOutput 4\nExplanation Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\nExample 2\n\nInput nums = [2,7,9,3,1]\nOutput 12\nExplanation Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\nTotal amount you can rob = 2 + 9 + 1 = 12.",
      "data_structure":"1d-array",
      "algorithm" : "dynamic programming",
      "code" : "dp[i] = min(dp[i-1],dp[i-2])",
      "description" : "always use bottom up since they are asking for number of way use pluse take care of base condition"
    }
  ]
}